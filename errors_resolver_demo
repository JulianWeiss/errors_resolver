#!/bin/bash

if ! python --help >  /dev/null; then
	echo please install python
	exit 1
fi

if ! ctags --help > /dev/null; then
	echo please install ctags
	exit 1
fi

export CPATH LIBRARY_PATH
export CPPFLAGS
export LDFLAGS=
export LDLIBS
export LD_LIBRARY_PATH

CPPFLAGS=-Wall
[ -z "$CC" ] && CC=gcc

showv()
{
	val=$(eval "echo \$${1}"); echo -n "$1='$val' $2"
}

fatal()
{
	echo "Fatal error $1"
	exit 1
}

echo -e "Initial invironment\n"
# Feature substitute_paths allows to substitute long paths to shortcut variables.
export substitute_paths=d1:d2 d1=some/long/path d2=some/long/path2
showv CC $'\n'
showv substitute_paths
showv d1
showv d2 $'\n'

make -s -B -C sub
echo

echo -e "pass 1: resolve headers paths\n"
eval "$(make -B -f /dev/null errors_resolver_sample 2>&1 | ./errors_resolver.py | tee out.tmp)"
cat out.tmp
echo

echo -e "pass 1: resolve headers\n"
eval "$(make -B -f /dev/null errors_resolver_sample 2>&1 | ./errors_resolver.py | tee out.tmp)"
cat out.tmp
echo

echo -e "pass 2: resolve libraries\n"
eval "$(make -B -f /dev/null errors_resolver_sample 2>&1 | ./errors_resolver.py | tee out.tmp)"
cat out.tmp
echo

echo -e "pass 3: resolve library paths\n"
eval "$(make -B -f /dev/null errors_resolver_sample 2>&1 | ./errors_resolver.py | tee out.tmp)"
cat out.tmp
echo

showv CPATH
showv CPPFLAGS
#showv LIBRARY_PATH
showv LDFLAGS
showv LDLIBS
echo -e "\n"

echo -e "Final compilation:\n"
make -B -f /dev/null errors_resolver_sample || fatal

if [ -e ./errors_resolver_sample ]; then
	arch=$(echo $(file -e elf ./errors_resolver_sample | cut -d',' -f2 | tr - _))
else
	arch=$(uname -m)
fi

echo -e "\nTest run:\n"

if [[ $arch = $(uname -m) ]];
then
	./errors_resolver_sample
else
	echo detected architecture $arch, machine $($CC -dumpmachine)
	qemu-${arch,,} -L /usr/"$($CC -dumpmachine)" ./errors_resolver_sample
fi

echo -e "\nFinal result:\n"
showv CPATH
showv CPPFLAGS
#showv LIBRARY_PATH
showv LDFLAGS
showv LDLIBS
echo "make -B -f /dev/null errors_resolver_sample "
showv LD_LIBRARY_PATH
echo ./errors_resolver_sample
