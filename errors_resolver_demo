#!/bin/bash

export CPPFLAGS
export LDFLAGS=
export LDLIBS

CPPFLAGS=-Wall
CTAGS="-I __THROW,__THROWNL,__nonnull+"
CTAGS+=" --exclude=etip.h" # avoid exit collision
CTAGS+=" --exclude=mysql" # avoid mysql/my_pthread.h collision
export CTAGS
# Credit: http://stackoverflow.com/questions/1632633/ctags-does-not-parse-stdio-h-properly#1632633

export includedir=/usr/include

[ -z "$CC" ] && CC=gcc
eval $(echo $($CC -v 2>&1) | grep -o 'includedir=\S*')
export lib_path=$($CC -Xlinker --verbose  2>/dev/null | grep SEARCH | sed 's/SEARCH_DIR("=\?\([^"]\+\)"); */\1:/g'  | grep -vE '^$'):.

showv()
{
	val=$(eval "echo \$${1}"); echo -n "$1='$val' $2"
}

echo "Initial invironment"
showv CC $'\n'
showv lib_path $'\n'
echo

make -s -B -C sub
#make -B -f /dev/null errors_resolver_sample > /dev/null

echo pass 1: resolve headers
eval "$(make -B -f /dev/null errors_resolver_sample 2>&1 | ./errors_resolver.py 2> /dev/null | tee out.tmp)"
cat out.tmp
echo

echo pass 2: resolve libraries
eval "$(make -B -f /dev/null errors_resolver_sample 2>&1 | ./errors_resolver.py 2> /dev/null | tee out.tmp)"
cat out.tmp
echo

echo pass 3: resolve library paths
eval "$(make -B -f /dev/null errors_resolver_sample 2>&1 | ./errors_resolver.py 2> /dev/null | tee out.tmp)"
cat out.tmp
echo

echo Final compilation:
make -B -f /dev/null errors_resolver_sample

if [ -e ./errors_resolver_sample ]; then
	arch=$(echo $(file -e elf ./errors_resolver_sample | cut -d',' -f2 | tr - _))
else
	arch=$(uname -m)
fi

echo -e "\nTest run:"

if [[ $arch = $(uname -m) ]];
then
	./errors_resolver_sample
else
	echo detected architecture $arch, machine $($CC -dumpmachine)
	qemu-${arch,,} -L /usr/"$($CC -dumpmachine)" ./errors_resolver_sample
fi

echo -e "\nFinal result:\n"
showv CPPFLAGS
showv LDFLAGS
showv LDLIBS
echo "make -B -f /dev/null errors_resolver_sample "
showv LD_LIBRARY_PATH
echo ./errors_resolver_sample
